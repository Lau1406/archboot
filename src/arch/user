#!/bin/bash

#                           USER MANAGEMENT
# ============================================================================
# Here we ask all required variables to the user and we store them.
#
#    Required variables:
#
#      LANGUAGE.......: full list is available in the wiki
#      KEYMAP.........: keymap language code for keyboard
#      HOST_NAME......: computer name such as <my-favorite-computer>
#      ROOTPASSWD.....: at least 6 chars long with 1 letter & 1 digit
#      USER_NAME......: such as <bobby_is_not_a_loser>
#      USERPASSWD.....: at least 6 chars long with 1 letter & 1 digit
#      POWER..........: add user to all groups and enable rights in sudoers
#      KERNEL.........: DEFAULT - HARDENED - LTS - ZEN
#      DESKTOP........: GNOME - KDE - DEEPIN - XFCE - LXDE - CINNAMON
#                       BUDGIE - ENLIGHTENMENT - MATE - LXQT
#      DISPLAY_MAN....: GDM - LIGHTDM - SDDM - LXDM - XDM
#
# Then we enable user rights in <sudoers> and we add him to all groups.
# ============================================================================

_get_user_variables() {
    unset CONFIRM

    # Language
    until grep -Fxq "${LANGUAGE}" ./language; do
        _note "full list is available in the wiki."
        _prompt "Enter language code:" "(e.g., fr_FR, en_US, de_DE)"
        read -r LANGUAGE
    done
    export LANGUAGE

    # Keymap
    KEYMAP=$(echo ${LANGUAGE} | cut -d'_' -f 1)
    export KEYMAP

    # Hostname
    until [[ ${#HOST_NAME} -ge 3 \
&& ${HOST_NAME} =~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter hostname:" "(e.g., my-favorite-computer)"
        read -r HOST_NAME
    done
    export HOST_NAME

    # Root Password
    until [[ ${#A} -ge 6 && ${A} == *[a-z]* && ${A} == *[0-9]* ]]; do
        _note "should be at least 6 chars long with 1 letter & 1 digit"
        _prompt "Enter root password:"
        read -rs A
    done
    echo

    # Confirm Root Password
    _prompt "Confirm root password:"
    read -rs ROOTPASSWD
    if [[ ${ROOTPASSWD} != "${A}" ]]; then
        _error "passwords does not match!"
    fi
    export ROOTPASSWD
    echo

    # Username
    until [[ ${#USER_NAME} -ge 2 && ${USER_NAME} \
=~ ^[a-zA-Z0-9][-a-zA-Z0-9_]+$ ]]; do
        _prompt "Enter username:" "(e.g., johnny)"
        read -r USER_NAME
    done
    export USER_NAME

    # User Password
    until [[ ${#B} -ge 6 && ${B} == *[a-z]* && ${B} == *[0-9]* ]]; do
        _note "should be at least 6 chars long with 1 letter & 1 digit"
        _prompt "Enter password for user ${USER_NAME}:"
        read -rs B
    done
    echo

    # Confirm User Password
    _prompt "Confirm password for user ${USER_NAME}:"
    read -rs USERPASSWD
    if [[ ${USERPASSWD} != "${B}" ]]; then
        _error "passwords does not match!"
    fi
    export USERPASSWD
    echo

    # User Rights
    _confirm "Do you wish to give all rights to user ${USER_NAME}?"
    case ${CONFIRM} in
        y|Y|yes|Yes|YES)
            export POWER="yes"
            ;;
    esac
    unset CONFIRM

    # Linux Kernel
    _confirm "Do you wish to install a custom Linux Kernel?"
    case ${CONFIRM} in

        # Custom kernel
        y|Y|yes|Yes|YES)
            until [[ ${KERNEL} =~ ^[1-4]$ ]]; do
                _select "DEFAULT" "HARDENED" "LTS" "ZEN"
                read -r KERNEL
            done
            KERNEL_CHOICE=\
(NONE DEFAULT_KERNEL HARDENED_KERNEL LTS_KERNEL ZEN_KERNEL)
            export KERNEL=${KERNEL_CHOICE[${KERNEL}]}
            ;;

        # Default kernel
        *)
            export KERNEL="DEFAULT_KERNEL"
            ;;
    esac
    export KERNEL_NAME=${KERNEL//_/ }
    unset CONFIRM

    # Desktop Environment
    _confirm "Do you wish to install a Desktop Environment?"
    case ${CONFIRM} in
        y|Y|yes|Yes|YES)
            until [[ ${DESKTOP} =~ ^[1-9][0]?$ ]]; do
                _select \
"GNOME" "KDE" "MATE" "XFCE" "LXDE" "LXQT" \
"DEEPIN" "BUDGIE" "CINNAMON" "ENLIGHTENMENT"
                read -r DESKTOP
            done
            DESKTOP_CHOICE=\
(NONE GNOME KDE MATE XFCE4 LXDE LXQT DEEPIN BUDGIE CINNAMON ENLIGHTENMENT)
            export DESKTOP=${DESKTOP_CHOICE[${DESKTOP}]}
            ;;
    esac
    unset CONFIRM

    # Display Manager
    if [[ -n ${DESKTOP+x} ]]; then
        _confirm \
"Do you wish to install ${DESKTOP,,} default Display Manager?"
        case ${CONFIRM} in

            # Custom display manager
            n|N|no|No|NO)
                until [[ ${DISPLAY_MAN} =~ ^[1-5]$ ]]; do
                    _select "GDM" "LIGHTDM" "SDDM" "LXDM" "XDM"
                    read -r DISPLAY_MAN
                done
                DISPLAY_CHOICE=(NONE GDM LIGHTDM SDDM LXDM XDM)
                export DISPLAY_MAN=${DISPLAY_CHOICE[${DISPLAY_MAN}]}
                ;;

            # Default display manager
            *)
                case ${DESKTOP} in
                    GNOME|BUDGIE|CINNAMON|MATE) export DISPLAY_MAN="GDM";;
                    KDE) export DISPLAY_MAN="SDDM";;
                    DEEPIN|ENLIGHTENMENT) export DISPLAY_MAN="LIGHTDM";;
                    XFCE4|LXDE|LXQT) export DISPLAY_MAN="LXDM";;
                esac
                ;;
        esac
        unset CONFIRM
    fi
}

_enable_user_rights() {

    # Enable user in sudoers
    _info "Enabling user ${USER_NAME} in sudoers"
    echo "${USER_NAME} ALL=(ALL) ALL" >> /mnt/etc/sudoers

    # Add user to all groups
    _info "Adding user ${USER_NAME} to all groups"
    _chroot "yes | pwck"
    _chroot "yes | grpck"
    GROUPLIST=$(cut -d: -f1 /mnt/etc/group)
    for GROUP in ${GROUPLIST}; do
        _chroot "gpasswd -a ${USER_NAME} ${GROUP}"
    done
}

# archboot by grm34 under Apache License 2.0
# ============================================================================
